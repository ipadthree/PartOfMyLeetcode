//This problem is similar to the #2 Add Two Numbers, just pay attention to the carry when dealing with the first
//digit of the number.

class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        int carry = 1;
        for(int i = digits.size()-1; i >= 0; i--){
            digits[i] = digits[i] + carry ;
            if(digits[i] > 9){
                digits[i] = digits[i] % 10;
                carry = 1;
            }else{
                carry = 0;
            }
            if(i == 0 && carry == 1){
                digits.insert(digits.begin(),1);
            }
        }
        return digits;
    }
};



void plusone(vector<int> &digits)
{
    int n = digits.size();
    for (int i = n - 1; i >= 0; --i)
    {
        if (digits[i] == 9)
        {
            digits[i] = 0;
        }
        else
        {
            digits[i]++;
            return;
        }
    }
        digits[0] =1;
        digits.push_back(0);

}
