//I read other's idea, and then thought the result of myself, following is other's idea.
//The essense of this problem is to find out the overlapping subproblems.

[Thoughts]
这题想了好久才想清楚。其实如果把上例的顺序改一下，就可以看出规律了。
 1                1                      2                       3             3
    \                 \                 /      \                  /              / 
      3               2              1       3               2             1
    /                   \                                       /                  \
 2                       3                                   1                    2

比如，以1为根的树有几个，完全取决于有二个元素的子树有几种。同理，2为根的子树取决于一个元素的子树有几个。以3为根的情况，则与1相同。




class Solution {
public:
    int numTrees(int n) {
        vector<int> tree(n+1,0);
        if(n <= 2) return n;
        tree[0] = 1;
        tree[1] = 1;
        tree[2] = 2;
        for(int i = 3 ; i <= n; i++){
            for(int j = 1; j <= i; j++){
                tree[i] += tree[j-1] * tree[i-j]; 
            }
        }
        return tree[n];
    }
};
