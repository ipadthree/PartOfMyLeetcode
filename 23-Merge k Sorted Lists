/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
 
 
 //This is other people's idea, I just retyped it;
 
 
 
class Solution {
public:
    ListNode* mergeLists(ListNode* n1, ListNode* n2){
        if(!n1) return n2;
        if(!n2) return n1;
        if(n1->val <= n2->val){
            n1->next = mergeLists(n1->next, n2);
            return n1;
        }
        if(n1->val > n2->val){
            n2->next = mergeLists(n1, n2->next);
            return n2;
        }
    }
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        if(lists.empty()) return NULL;
        int len = lists.size();
        while(len > 1){
            for(int i = 0; i < len / 2; i++){
                lists[i] = mergeLists(lists[i], lists[len - i - 1]);
            }
            len = (len + 1) / 2;
        }
        return lists.front();
    }
};
