// This is inspired by other's idea,
// At first I was shocked by how to implement DP in the answer
// Then I realized others didn't try to use dp on purpose.
// So I just need to find the longest ascending slope, then I am done.






class Solution {
public:
    int maxProfit(vector<int>& prices) {
        if(prices.size() <= 1) return 0;
        int maxmoney = 0, current = 0;
        for(int i = 1; i < prices.size(); i++){
            current = current + prices[i] - prices[i-1];
            if(current < 0) current = 0;
            maxmoney = max(current,maxmoney);
        }
        return maxmoney;
    }
};
