//I did this all by myself

class Solution {
public:
int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
    if(obstacleGrid.size() == 0 || obstacleGrid[0].size() == 0) return 0;
    if(obstacleGrid[0][0] == 1 || obstacleGrid[obstacleGrid.size() - 1][obstacleGrid[0].size() - 1] == 1) return 0;
    if(obstacleGrid.size() == 1 || obstacleGrid[0].size() == 1) return 1;
    vector<vector<int>> grid(obstacleGrid.size(), vector<int>(obstacleGrid[0].size(), 1));
    for(int i = 0; i < obstacleGrid.size(); i++){
        for(int j = 0; j < obstacleGrid[0].size(); j++){
            if(obstacleGrid[i][j] == 1){
                grid[i][j] = -1;
            }else{
                if(j == 0 && i == 0) {
                    grid[0][0] = 1;
                    continue;
                }
                else if(j - 1 < 0) grid[i][j] = grid[i-1][j] == -1 ? 0 : grid[i-1][j];
                else if(i - 1 < 0) grid[i][j] = grid[i][j-1] == -1 ? 0 : grid[i][j-1];
                else {
                    grid[i][j] = (grid[i][j-1] == -1 ? 0 : grid[i][j-1]) + (grid[i-1][j] == -1 ? 0 : grid[i-1][j]);
                }
            }
        }
    }
    return grid[obstacleGrid.size() - 1][obstacleGrid[0].size() - 1];
}
};
